{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/ImageCard.js","components/GifGrid.js","hooks/useFetchGifs.js","components/Categorias.js","components/Encabezado.js","GiftExpertApp.js","index.js"],"names":["AddCategory","categories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","i","indexOf","cat","alert","type","className","placeholder","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","image","images","original","ImageCard","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","Categorias","Encabezado","onClick","length","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,WAAWC,EAAmB,EAAnBA,cAEpC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEF,IAAMC,EAAIR,EAAWS,QAAQN,GACzBA,IAAqB,IAAPK,GACdP,GAAe,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,KAEdO,MAAM,oDAKV,SACI,uBACIC,KAAK,OACLC,UAAU,yNACVC,YAAY,eACZC,MAAOZ,EACPa,SAvBc,SAACV,GACvBF,EAAcE,EAAEW,OAAOF,a,uBCRlBG,EAAQ,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,4DAEJ,mCACVC,EAHc,iDAGkCC,UAAUH,GAH5C,6BAEJ,oCAFI,SAIDI,MAAOF,GAJN,cAIdG,EAJc,gBAKDA,EAAKC,OALJ,cAKdC,EALc,OAOdC,EAAOD,EAAKA,KAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC9B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,MAAK,UAAEH,EAAII,cAAN,aAAE,EAAYC,SAASb,QAXhB,kBAebM,GAfa,4CAAH,sDCERQ,EAAY,SAAC,GAAa,IAAZH,EAAW,EAAXA,MACvB,OACI,qBAAKnB,UAAU,MAAf,SACI,qBAAKA,UAAU,yBAAyBuB,IAAKJ,EAAMA,MAAOK,IAAKL,EAAMD,WCDpEO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHwB,SAAEA,GAE1B,MAA0BjB,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAW,WAEPxB,EAAUC,GACLwB,MAAM,SAAAC,GAEHC,QAAQC,IAAIF,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,IAEIC,EDlBwBO,CAAc5B,GAAjCc,EAAZ,EAAOP,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qBAAI1B,UAAU,yEAAd,UACI,qBAAKA,UAAU,MAAf,SAAsBM,IACtB,sBAAKN,UAAU,4DAAf,UACM0B,GAAW,4CAETN,EAAOL,KAAI,SAAAI,GAAK,OAAI,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMF,cEVjDkB,EAAa,SAAC,GAAkB,IAAjBhD,EAAgB,EAAhBA,WACxB,OACI,oBAAIa,UAAU,aAAd,SAEIb,EAAW4B,KAAI,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,SCNxC8B,EAAa,SAAC,GAAgC,IAA/BjD,EAA8B,EAA9BA,WAAWC,EAAmB,EAAnBA,cAKnC,OACI,qCACI,oBAAIY,UAAU,mDAAd,6BACA,oBAAIA,UAAU,oBACd,yBAAQA,UAAU,yDAAyDqC,QAP/D,WAChBjD,EAAc,KAMV,+BAAoHD,EAAWmD,OAA/H,WCMGC,MAZf,WAEE,MAAoClD,mBAAS,IAA7C,mBAAOF,EAAP,KAAmBC,EAAnB,KAEA,OACE,sBAAKY,UAAU,YAAf,UACE,cAAC,EAAD,CAAYb,WAAYA,EAAYC,cAAgBA,IACpD,cAAC,EAAD,CAAaD,WAAYA,EAAYC,cAAgBA,IACrD,cAAC,EAAD,CAAYD,WAAYA,QCR9BqD,IAASC,OACP,qBAAKzC,UAAU,uBAAf,SACE,cAAC,EAAD,MAEF0C,SAASC,eAAe,W","file":"static/js/main.e9518689.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({categories,setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        //Logica del submit\n        const i = categories.indexOf(inputValue)\n        if (inputValue && i === -1){\n            setCategories( cat => [inputValue,...cat]);\n            setInputValue('');\n        }else{\n            alert('Debe ingresar un valor y no puede ser repetido!')\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\" \n                className=\"appearance-none w-full text-gray-800 rounded-md p-2 my-6 bg-pink-100 border-1 focus:border-pink-300 border-pink-300 focus:ring-1 focus:ring-pink-500 focus:ring-offset-3 focus:ring-offset-pink-500 focus:outline-none\" \n                placeholder=\"Add category\" \n                value={inputValue}\n                onChange={handleInputChange}\n            />  \n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories : PropTypes.func.isRequired,\n    categories: PropTypes.array.isRequired\n}","export const getGifts = async (category) => {\n\n    const api_key = 'AEM93pDB4wa3GRu0m69ZWX4AlpWcKBsA';\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=20&api_key=${api_key}`;\n    const resp = await fetch( url );\n    const data = await resp.json();\n\n    const gifs = data.data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            image: img.images?.original.url\n        }\n    });\n\n    return gifs;\n}","import React from 'react'\n\nexport const ImageCard = ({image}) => {\n    return (\n        <div className=\"m-1\">\n            <img className=\"w-42 h-42 object-cover\" src={image.image} alt={image.title} />\n        </div>\n    )\n}\n","import React, {useEffect, useState} from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { ImageCard } from './ImageCard';\n\nexport const GifGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGifs( category );\n\n    return (\n        <li className=\"w-full bg-pink-500 text-gray-100 uppercase rounded-t-md font-bold mb-4\">\n            <div className=\"p-2\">{category}</div>\n            <div className=\"bg-pink-800 p-2 flex flex-col items-center justify-center\">\n                { loading && <p>Cargando...</p> }\n                {\n                    images.map(image => <ImageCard key={image.id} image={image} />)\n                }\n            </div>\n        </li>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifts } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect( () => {\n\n        getGifts( category )\n            .then( imgs => {\n\n                console.log(imgs)\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            })\n\n    }, [] )\n\n    return state;\n}","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { GifGrid } from './GifGrid';\n\nexport const Categorias = ({categories}) => {\n    return (\n        <ol className=\"text-white\">\n        { \n            categories.map(category => <GifGrid key={category} category={category} />)\n        }\n        </ol>\n    )\n}\n\nCategorias.propTypes = {\n    categories: PropTypes.array.isRequired\n}","import React from 'react'\n\nexport const Encabezado = ({categories,setCategories}) => {\n\n    const handleReset = () => {\n        setCategories([])\n    }\n    return (\n        <>\n            <h1 className=\"text-pink-400 prose text-4xl font-bold uppercase\">GIFT-EXPERT App</h1>\n            <hr className=\"border-pink-400\" />\n            <button className=\"bg-indigo-500 p-2 rounded-md text-white uppercase my-3\" onClick={handleReset}>Reset categories ({categories.length})</button>\n        </>\n    )\n}","import { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { Categorias } from \"./components/Categorias\";\nimport { Encabezado } from \"./components/Encabezado\";\n\nfunction GiftExpertApp() {\n\n  const [categories, setCategories] = useState([]);\n\n  return (\n    <div className=\"container\">\n      <Encabezado categories={categories} setCategories={ setCategories } />\n      <AddCategory categories={categories} setCategories={ setCategories } />   \n      <Categorias categories={categories} />\n    </div>\n  );\n}\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftExpertApp from './GiftExpertApp';\n\nReactDOM.render(\n  <div className=\"w-full h-screen p-20\">\n    <GiftExpertApp />\n  </div>,\n  document.getElementById('root')\n);"],"sourceRoot":""}